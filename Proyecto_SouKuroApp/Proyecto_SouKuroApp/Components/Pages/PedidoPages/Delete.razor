@page "/deletePedido"
@page "/deletePedido/{PedidoId:int}"
@inject PedidoServices pedidoServices
@inject NavigationManager Navigation
@rendermode InteractiveServer
@using Shared.Models


<div class="card">
    <div class="card-header bg-danger text-light">
        <h1 class="mb-0">¿Desea Eliminar este Pedido?</h1>
    </div>
    <div class="card-body">
        <h5 class="card-title">Detalles del Pedido</h5>
        <dl class="row">
            
            <dt class="col-sm-3">PedidoId:</dt>
            <dd class="col-sm-9">@pedido.PedidoId</dd>

            <dt class="col-sm-3">Fecha:</dt>
            <dd class="col-sm-9">@pedido.Fecha_Pedido</dd>
            
            <dt class="col-sm-3">Direcci&oacute;n:</dt>
            <dd class="col-sm-9">@pedido.Direccion</dd>
            
            <dt class="col-sm-3">Estado:</dt>
            <dd class="col-sm-9">@pedido.Estado</dd>

        </dl>
    </div>
    <div class="card-footer">
        <a href="/pedido" class="btn btn-outline-primary bi bi bi-arrow-return-left"> Volver</a>
        <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar</button>

    </div>
</div>

@code {
    [Parameter]
    public int PedidoId { get; set; }

    public Pedido pedido { get; set; } = new Pedido();


    protected override async Task OnInitializedAsync()
    {
        pedido = await pedidoServices.Buscar(PedidoId);
    }


    public async Task Eliminar()
    {
        if (!await pedidoServices.Existe(pedido.PedidoId))
        {
            return;
        }
        if (await pedidoServices.Eliminar(this.pedido))
        {
            Atras();
        }

    }

    void Atras()
    {
        Navigation.NavigateTo("/pedido");
    }
}
