@page "/pedidoEdit"
@page "/pedidoEdit/{PedidoId:int}"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject PedidoServices pedidoService
@using Shared.Models;

<h4>Venta</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="pedido" OnValidSubmit="Modificar" FormName="pedidoEdit" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="pedidoId" class="form-label">PedidoId:</label>
                <label id="pedidoId" class="form-control">@pedido.PedidoId</label>
                <ValidationMessage For="() => pedido.PedidoId" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="fecha" class="form-label">Fecha Pedida:</label>
                <InputDate id="fecha" @bind-Value="pedido.Fecha_Pedido" class="form-control" />
                <ValidationMessage For="() => pedido.Fecha_Pedido" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="direccion" class="form-label">Direcci&oacute;n:</label>
                <InputText id="direccion" @bind-Value="pedido.Direccion" class="form-control" />
                <ValidationMessage For="() => pedido.Direccion" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="estado" class="form-label">Estado:</label>
                <InputText id="estado" @bind-Value="pedido.Estado" class="form-control" />
                <ValidationMessage For="() => pedido.Estado" class="text-danger" />
            </div>

            <div class="card-footer">
                <a href="/pedido" class="btn btn-outline-danger bi bi-house-door-fill"> Volver</a>
                <button type="submit" class="btn btn-primary">Modificar</button>
            </div>

        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int PedidoId { get; set; }
    public Pedido pedido { get; set; } = new Pedido();

    protected override async Task OnInitializedAsync()
    {
        if (PedidoId > 0)
        {
            pedido = await pedidoService.Buscar(PedidoId);
        }
    }

    public async Task Modificar()
    {
        var guardo = await pedidoService.Modificar(pedido);
        if (guardo)
        {
            await Task.Delay(500);
            Atras();
        }
    }

    void Atras()
    {
        Navigation.NavigateTo("/pedido");
    }
}