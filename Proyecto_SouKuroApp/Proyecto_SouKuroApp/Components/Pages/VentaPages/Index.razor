@page "/venta"
@page "/venta/{VentaId:int}"
@using Microsoft.AspNetCore.Authorization
@using Shared.Models
@attribute [Authorize]
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject VentaServices ventaservices


<div class="card">
    <div class="card-header">
        <h3>Venta</h3>
        <a href="/ventaCreate" class="btn btn-outline-primary bi bi-plus-square">  Crear</a>
    </div>

    <div class="card-body">

        <div class="input-group-text">

            <label class="form-control-label col-1">Desde:</label>
            <div class="col-3">
                <input class="form-control" type="date" @bind="Desde" />
            </div>

            <label class="form-control-label col-1">Hasta:</label>
            <div class="col-3">
                <input class="form-control" type="date" @bind="Hasta" />
            </div>

            <div class="col-5">
                <button type="button" @onclick="Buscar" class="btn btn-primary  ">
                    <i class="bi bi-search" />
                    <br /> Buscar
                </button>
            </div>

        </div>

        <div class="row">
            <div class="col-3">
                <label>Filtrar Por</label>
                <InputSelect @bind-Value="Opcion" class="form-select">
                    <option value="0" selected disabled>Seleccione</option>
                    <option value="1">VentaId</option>
                   
                </InputSelect>
            </div>

            @if (Opcion == 1)
            {
                <div class="col-3">
                    <label>ID</label>
                    <div class="input-group">
                        <InputNumber @bind-Value="VentaId" class="form-control"></InputNumber>
                    </div>
                </div>
            }

      

        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th scope="col" class="text-center">VentaId</th>
                    <th scope="col" class="text-center">Nombre Cliente</th>
                    <th scope="col" class="text-center">Fecha</th>
                    

                    <th></th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in ListaVenta)
                {
                    <tr>
                        <td class="text-center">@item.VentaId</td>
                        <td class="text-center">@item.NombreCliente</td>
                        <td class="text-center">@item.Fecha</td>
                      

                        <td>
                            <a href="/deleteVenta/@item.VentaId" class="btn btn-danger bi bi-trash-fill">Delete</a>
                            <a href="/ventaEdit/@item.VentaId" class="btn btn-primary bi-box-arrow-up-right">Edit</a>
                            <a href="/detailsVenta/@item.VentaId" class="btn btn-success bi-box-arrow-up-right">Detalles</a>

                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
    <div class="card-footer">
        <a href="/" class="btn btn-outline-danger bi bi-house-door-fill"> Volver</a>
    </div>
</div>

@code {
    [Parameter]
    public int VentaId { get; set; }
    public Venta venta { get; set; } = new Venta();
    public List<Venta> ListaVenta { get; set; } = new List<Venta>();
   

    public int Opcion = 0;

    public DateTime Desde { get; set; }
    public DateTime Hasta { get; set; }
    public int Gastado { get; set; }



    protected override async Task OnInitializedAsync()
    {

        ListaVenta = await ventaservices.Listar(t => true);
        Desde = DateTime.Now.AddMonths(-1);
        Hasta = DateTime.Now;
    }

    public async Task Buscar()
    {
        Hasta = new DateTime(Hasta.Year, Hasta.Month, Hasta.Day, 23, 59, 59);
        if (Opcion == 0)
        {
            ListaVenta = await ventaservices.Listar(t => t.Fecha >= Desde && t.Fecha <= Hasta);
        }
        if (Opcion == 1)
        {
            if (VentaId <= 0)
                ListaVenta = await ventaservices.Listar(t => true);
            else
                ListaVenta = await ventaservices.Listar(t => t.VentaId == VentaId && t.Fecha >= Desde && t.Fecha <= Hasta);
        }
      
    }
}
