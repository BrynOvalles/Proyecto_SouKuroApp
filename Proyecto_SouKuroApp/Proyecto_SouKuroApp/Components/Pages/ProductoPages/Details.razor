@page "/detailsProducto"
@page "/detailsProducto/{ProductoId:int}"
@inject ProductoServices productoservice
@inject NavigationManager Navigation
@rendermode InteractiveServer
@using Shared.Models

<div class="card">
    <div class="card-header bg-danger text-light">
        <h1 class="mb-0">Detalle</h1>
    </div>
    <div class="card-body">
        <h5 class="card-title">Detalles del Producto</h5>
        <dl class="row">
            <dt class="col-sm-3">ProductoId:</dt>
            <dd class="col-sm-9">@producto.ProductoId</dd>

            <dt class="col-sm-3">Nombre del Producto</dt>
            <dd class="col-sm-9">@producto.Nombre</dd>

            <dt class="col-sm-3">Stock</dt>
            <dd class="col-sm-9">@producto.Stock</dd>

            <dt class="col-sm-3">Costo:</dt>
            <dd class="col-sm-9">@producto.Precio</dd>

        </dl>
    </div>

    <table class='table table-bordered table-hover'>
        <thead>
            <tr>
                <th>Categoria del Producto</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var detalle in listaDetalles)
            {
                <tr>
                    <td>@detalle.Categoria</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="card-footer">
        <a href="/producto" class="btn btn-outline-primary bi bi bi-arrow-return-left"> Volver</a>
        
    </div>
</div>

@code {
    [Parameter]
    public int ProductoId { get; set; }
    public Producto producto { get; set; } = new Producto();
    public Producto_Detalle Detalles { get; set; } = new Producto_Detalle();
    public List<Producto_Detalle> listaDetalles = new List<Producto_Detalle>();

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500); // Espera opcional, si es necesario

        producto = await productoservice.GetProducto(ProductoId);

        if (producto != null)
        {
            if (producto.Detalle != null)
            {
                listaDetalles = producto.Detalle.ToList();
            }
            else
            {
                listaDetalles = new List<Producto_Detalle>();
            }
        }

        Detalles = new Producto_Detalle(); // Inicializar Detalles
    }
    public async Task Buscar()
    {
        var productoEncontrado = await productoservice.Buscar(producto.ProductoId);

        if (productoEncontrado != null)
        {
            this.producto = productoEncontrado;
        }
    }

   

   
}
