@page "/usuario"

@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Proyecto_SouKuroApp.Data
@using Shared.Models
@attribute [Authorize(Roles ="Admin")]
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject UsuariosServices usuarioservice
@inject UserManager<ApplicationUser> userManager

<div class="card">
    <div class="card-header">
        <h3>Detalles de Usuario</h3>
        <a href="/usuarioCreate" class="btn btn-outline-primary bi bi-plus-square">  Crear</a>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    
                    <th scope="col" class="text-center">Email</th>
                    
                    
                    <th></th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in ListaUser)
                {
                    <tr>
                        
                        <td class="text-center">@item.UserName</td>
                        
                       
                       
                        <td>
                            <a href="/deleteUsuario/@item.Id" class="btn btn-danger bi bi-trash-fill">Delete</a>
                            <a href="/usuarioEdit/@item.Id" class="btn btn-primary bi-box-arrow-up-right">Edit</a>
                            <a href="/detailsUsuario/@item.Id" class="btn btn-success bi-box-arrow-up-right">Detalles</a>

                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
    <div class="card-footer">
        <a href="/" class="btn btn-outline-danger bi bi-house-door-fill"> Volver</a>
    </div>
</div>

@code {
   public ICollection<ApplicationUser> ListaUser { get; set; } = new List<ApplicationUser>();
    public ApplicationUser User { get; set; } = new ApplicationUser();

    protected override async Task OnInitializedAsync()
    {
        ListaUser = await userManager.GetUsersInRoleAsync("User");
        
    }
}
