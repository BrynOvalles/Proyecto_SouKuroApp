@page "/reservacionCli"
@page "/reservacionCli/{ReservacionId:int}"
@using Microsoft.AspNetCore.Authorization
@using Shared.Models
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject ReservacionServices reservacionservices


<div class="card">
	<div class="card-header">
		<h3>Reservaciones</h3>
		<a href="/Clir_Create" class="btn btn-outline-primary bi bi-plus-square">  Crear</a>
	</div>
	<div class="table-responsive">
		<table class="table table-striped table-bordered">
			<thead>
				<tr>

					<th scope="col" class="text-center">Nombre</th>
					<th scope="col" class="text-center">Cedula</th>
					<th scope="col" class="text-center">Fecha reservacion</th>
					<th scope="col" class="text-center">Estado de la Reservaci&oacute;n</th>
					<th></th>
					<th scope="col" class="text-center">Observaciones</th>

				</tr>
			</thead>
			<tbody>
				@foreach (var item in listaReservacion)
				{
					<tr>
						<td class="text-center">@item.Nombre_Cliente</td>
						<td class="text-center">@item.Cedula</td>
						<td class="text-center">@item.Fecha.ToShortDateString()</td>
						<td class="text-center">@item.Estado</td>
						@if (item.Estado == "Aceptada")
						{
							<td>
								<i class="bi bi-check-all"></i>
							</td>
						}
						@if (item.Estado == "Rechazada")
						{
							<td>
								<i class="bi bi-x-lg"></i>
							</td>
						}
						else
						{
							<td>
								<a href="/reservacionCliEdit/@item.ReservacionId" class="btn btn-primary bi-box-arrow-up-right">Editar</a>
							</td>
						}
						@if (item.Observaciones != null && item.Estado == "Rechazada")
						{
							<td>
								@item.Observaciones
							</td>
						}
					</tr>
				}
			</tbody>
		</table>
		<h5>Para Para cancelar su Reservacion acercarse a local en las horas de trabajo.</h5>
	</div>
	<div class="card-footer">
		<a href="/" class="btn btn-outline-danger bi bi-house-door-fill"> Volver</a>
	</div>
</div>

@code {
	[Parameter]
	public int ReservacionId { get; set; }
	public Reservacion reservacion { get; set; } = new Reservacion();
	public List<Reservacion> listaReservacion { get; set; } = new List<Reservacion>();


	protected override async Task OnInitializedAsync()
	{
		listaReservacion = await reservacionservices.Listar(t => true);
	}
}
