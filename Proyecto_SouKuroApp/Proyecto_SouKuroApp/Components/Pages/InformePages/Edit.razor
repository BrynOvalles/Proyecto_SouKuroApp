@page "/informeEdit"
@page "/informeEdit/{InformeId:int}"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject InformeServices informeservices
@using Shared.Models;

<PageTitle>Modificar</PageTitle>
<h1>Modificar</h1>

<h4>Informe</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="informe" OnValidSubmit="Modificar" FormName="informeEdit" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="InformeId" class="form-label">InformeId:</label>
                <InputNumber id="InformeId" @bind-Value="informe.InformeId" class="form-control" />
                <ValidationMessage For="() => informe.InformeId" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="fechainicio" class="form-label">Fecha de Inicio:</label>
                <InputDate id="fechainicio" @bind-Value="informe.Fecha_Inicio" class="form-control" />
                <ValidationMessage For="() => informe.Fecha_Inicio" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="fechafinal" class="form-label">Fecha Final:</label>
                <InputDate id="fechafinal" @bind-Value="informe.Fecha_Final" class="form-control" />
                <ValidationMessage For="() => informe.Fecha_Final" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="totalcompras" class="form-label">Total de compras:</label>
                <InputNumber id="totalcompras" @bind-Value="informe.Total_Compras" class="form-control" />
                <ValidationMessage For="() => informe.Total_Compras" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="gastado" class="form-label">Gastado:</label>
                <InputNumber id="gastado" @bind-Value="informe.Gastado" class="form-control" />
                <ValidationMessage For="() => informe.Gastado" class="text-danger" />
            </div>
            <div class="card-footer">
                <a href="/informe" class="btn btn-outline-danger bi bi-house-door-fill"> Volver</a>
                <button type="submit" class="btn btn-primary">Modificar</button>
            </div>

        </EditForm>
    </div>
</div>



@code {
    [Parameter]
    public int InformeId { get; set; }
    public Informe informe { get; set; } = new Informe();


    protected override async Task OnInitializedAsync()
    {

        if (InformeId > 0)
        {
            informe = await informeservices.Buscar(InformeId);
        }
    }



    public async Task Modificar()
    {
        var guardo = await informeservices.Modificar(informe);
        if (guardo)
        {


            await Task.Delay(500);
            Navigation.NavigateTo("/informe");
        }

    }



    void Atras()
    {
        Navigation.NavigateTo("/informe");
    }
}
